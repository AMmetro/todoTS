import React from 'react';
import {FilterValuesType} from './App';
import AddItemsForms from "./AddItemsForms";
import EditableSpan from "./EditableSpan";

export type TaskType = {
    id: string
    title: string
    isDone: boolean
}

type PropsType = {
    todoListId:string
    title: string
    tasks: Array<TaskType>
    removeTask: (taskId: string, todoListId:string) => void
    removeTodoList: (todoListId:string) => void
    changeFilter: (value: FilterValuesType, todoListId:string) => void
    addTask:(title:string, todoListId:string)=>void
    changeStatus:(taskId: string, checked:boolean, todoListId:string)=>void
    changeTaskTitle:(taskId: string, newTitle:string, todoListId:string)=>void
    changeTodoListTitle:(newTitle:string, todoListId:string)=>void
    filter: FilterValuesType
}

export function Todolist(props: PropsType) {

    const addTask=(newTitle:string)=>{
        props.addTask(newTitle,props.todoListId)
    }

    const getNewTitle=(taskId:string, newTitle:string)=>{
        props.changeTaskTitle(taskId, newTitle, props.todoListId)
    }

    const changeTodoListTitle=(newTitle:string)=>{
        props.changeTodoListTitle(newTitle, props.todoListId)
    }




    return (
        <div>

            <h3>
                {/*<EditableSpan title={props.title}  getNewTitle={changeTodoListTitle}/>*/}
        <button onClick={()=>{props.removeTodoList(props.todoListId)}}>x</button></h3>
    <AddItemsForms addItems={addTask} />
    <ul>
    {
        props.tasks.map(t => <li key={t.id} className={ t.isDone ? "is-done": "" } >
        <input type="checkbox"
        checked={t.isDone}
        onClick={(e)=>props.changeStatus(t.id, e.currentTarget.checked,props.todoListId)}
    />
    <EditableSpan title={t.title}
    getNewTitle={getNewTitle}
    taskId={t.id}
    />

    <button onClick={ () => { props.removeTask(t.id,props.todoListId)} }>x</button>
    </li>)
}
    </ul>
    <div>
    <button className={(props.filter=="all") ? "active-filter" : ""}
    onClick={ () => { props.changeFilter("all",props.todoListId) } }>
    All  </button>
    <button className={(props.filter=="active") ? "active-filter" : ""}
    onClick={ () => { props.changeFilter("active",props.todoListId) } }>
    Active </button>
    <button className={(props.filter=="completed") ? "active-filter" : ""}
    onClick={ () => { props.changeFilter("completed",props.todoListId) } }>
    Completed </button>
    </div>
    </div>)
}
